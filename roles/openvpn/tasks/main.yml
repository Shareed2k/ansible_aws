---
# tasks file for ec2


# security gruop for openvpn ports
# and we will use static ip to 
# connect by ssh only from it

- name: Create a security group
  ec2_group:
    name: "Openvpn sg"
    description: Security Group for openvpn server
    vpc_id: "{{ vpc_id }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ my_ip }}/32"
      - proto: tcp
        from_port: 943
        to_port: 943
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 1194
        to_port: 1194
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: openvpn_sg

- name: Set Openvpn SG ID
  set_fact:
    openvpn_sg_id: "{{ openvpn_sg.group_id }}"

# Lets create private key if not exist

- name: Create an EC2 key
  ec2_key:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: "openvpn-key"
    region: "{{ aws_region }}"
  register: ec2_key

- debug: var=ec2_key

# neew to store private key in user home .ssh dir
# for feuter use

- name: save private key
  copy: content="{{ ec2_key.key.private_key }}" dest="/Users/shareed2k/.ssh/aws-openvpn-private.pem" mode=0600
  when: ec2_key.changed

# Now we will create ec2 instance 
# and we gonna use openvpn instance from aws market

- name: Create openvpn server instances
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    key_name: "openvpn-key"
    group_id: "{{ openvpn_sg_id }}"
    instance_type: t2.micro
    image: "ami-07783674"
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ public_subnet_id }}"
    assign_public_ip: yes
    wait: true
    instance_tags:
      Name: "Openvpn {{ vpc_name }}"
    count_tag: 
      Name: "Openvpn {{ vpc_name }}"
    exact_count: 1
    volumes: 
     - device_name: /dev/sda1
       device_type: gp2
       volume_size: 8
       delete_on_termination: true
  register: ec2

- debug: var=ec2

# also we gonna use elastic ip for openvpn instance

- name: allocate a new elastic IP and associate it with an instance
  ec2_eip:
    device_id: "{{ item }}"
    region: "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
  with_items: "{{ ec2.instance_ids }}"